{"ast":null,"code":"import _regeneratorRuntime from \"D:/gav(1)/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/gav(1)/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { config } from \"../../../config\";\nimport { OWNER_LIST_OF_CARS_REQUEST, OWNER_LIST_OF_CARS_SUCCESS, OWNER_LIST_OF_CARS_FAIL } from \"../../../constants/owner\";\nimport { CARS_DETAILS_REQUEST, CARS_DETAILS_SUCCESS, CARS_DETAILS_FAIL } from \"../../../constants/carsConstant\";\nimport httpRequest from \"../../../utils/request\";\nimport serialize from '../../../utils/serilizers';\nimport { getSession } from 'next-auth/client';\nimport { notify, useInput } from \"../../../utils/common\";\nexport var ownerListOfCars = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(queryParamsObj, callback) {\n    var session, token, url, _yield$httpRequest$ge, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return getSession();\n\n          case 3:\n            session = _context.sent;\n            token = 'Bearer ' + session.access_token;\n            url = serialize(\"\".concat(config.baseUrl, \"/api/proprietario/carros?\"), queryParamsObj);\n            _context.next = 8;\n            return httpRequest.get(url, true, token);\n\n          case 8:\n            _yield$httpRequest$ge = _context.sent;\n            data = _yield$httpRequest$ge.data;\n            callback();\n            console.log('session', session);\n            return _context.abrupt(\"return\", data);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](0);\n            callback();\n            notify(\"error\", _context.t0.response && _context.t0.response.data.message || \"\");\n            return _context.abrupt(\"return\", null);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 15]]);\n  }));\n\n  return function ownerListOfCars(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var carDetails = function carDetails(callback) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var session, token, url, _yield$httpRequest$ge2, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: CARS_DETAILS_REQUEST\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return getSession();\n\n            case 4:\n              session = _context2.sent;\n              token = 'Bearer ' + session.access_token;\n              url = serialize(\"\".concat(config.baseUrl, \"/api/docs#operation/alugueisList\"));\n              _context2.next = 9;\n              return httpRequest.get(url, true, token);\n\n            case 9:\n              _yield$httpRequest$ge2 = _context2.sent;\n              data = _yield$httpRequest$ge2.data;\n              console.log(\"data = \", data);\n              dispatch({\n                type: CARS_DETAILS_SUCCESS,\n                payload: data\n              });\n              callback(data, null);\n              _context2.next = 20;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch({\n                type: CARS_DETAILS_FAIL,\n                payload: _context2.t0.response\n              });\n              callback(null, _context2.t0.response);\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 16]]);\n    }));\n\n    return function (_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":null,"metadata":{},"sourceType":"module"}