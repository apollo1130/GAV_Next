{"ast":null,"code":"import { config } from \"../../../config\";\nimport { OWNER_LIST_OF_CARS_REQUEST, OWNER_LIST_OF_CARS_SUCCESS, OWNER_LIST_OF_CARS_FAIL } from \"../../../constants/owner\";\nimport { CARS_DETAILS_REQUEST, CARS_DETAILS_SUCCESS, CARS_DETAILS_FAIL } from \"../../../constants/carsConstant\";\nimport httpRequest from \"../../../utils/request\";\nimport serialize from '../../../utils/serilizers';\nimport { getSession } from 'next-auth/client';\nimport { notify, useInput } from \"../../../utils/common\";\nexport const ownerListOfCars = async (queryParamsObj, callback) => {\n  try {\n    const session = await getSession();\n    const token = 'Bearer ' + session.access_token;\n    const url = serialize(`${config.baseUrl}/api/proprietario/carros?`, queryParamsObj);\n    const {\n      data\n    } = await httpRequest.get(url, true, token);\n    callback();\n    console.log('session', session);\n    return data;\n  } catch (error) {\n    callback();\n    notify(\"error\", error.response && error.response.data.message || \"\");\n    return null;\n  }\n};\nexport const carDetails = callback => async dispatch => {\n  dispatch({\n    type: CARS_DETAILS_REQUEST\n  });\n\n  try {\n    const session = await getSession();\n    const token = 'Bearer ' + session.access_token;\n    const url = serialize(`${config.baseUrl}/api/docs#operation/alugueisList`);\n    const {\n      data\n    } = await httpRequest.get(url, true, token);\n    console.log(\"data = \", data);\n    dispatch({\n      type: CARS_DETAILS_SUCCESS,\n      payload: data\n    });\n    callback(data, null);\n  } catch (error) {\n    dispatch({\n      type: CARS_DETAILS_FAIL,\n      payload: error.response\n    });\n    callback(null, error.response);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}