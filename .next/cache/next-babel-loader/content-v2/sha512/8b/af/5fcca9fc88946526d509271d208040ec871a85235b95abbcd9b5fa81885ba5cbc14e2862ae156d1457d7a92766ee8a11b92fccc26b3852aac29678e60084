{"ast":null,"code":"import _regeneratorRuntime from \"D:/gav(1)/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"D:/gav(1)/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"D:/gav(1)/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"D:/gav(1)/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { config } from \"../../config\";\nimport httpRequest from \"../../utils/request\";\nimport { getSession } from 'next-auth/client';\nimport { notify, useInput } from \"../../utils/common\";\nexport var updateOwner = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(newData, obj) {\n    var pessoa_fisica, endereco, pessoa_arquivos, body, session, token, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            pessoa_fisica = _objectSpread(_objectSpread({}, obj.pessoa_fisica), {}, {\n              cpf: newData.cpf,\n              nome: newData.nome\n            });\n            endereco = [{\n              \"latitude\": obj.latitude,\n              \"longitude\": obj.longitude,\n              \"logradouro\": newData.rua,\n              \"cep\": newData.cep,\n              \"numero\": newData.numero,\n              \"complemento\": newData.complemento,\n              \"bairro\": newData.bairro,\n              \"cidade_id\": newData.cidadeId\n            }];\n            pessoa_arquivos = [];\n\n            if (obj.pessoa_arquivos) {\n              pessoa_arquivos = _toConsumableArray(obj.pessoa_arquivos);\n            }\n\n            if (newData.cnhId) {\n              pessoa_arquivos.push({\n                arquivo_id: newData.cnhId,\n                pessoa_arquivo_tipo_id: 1\n              });\n            }\n\n            if (newData.comprovanteId) {\n              pessoa_arquivos.push({\n                arquivo_id: newData.comprovanteId,\n                pessoa_arquivo_tipo_id: 2\n              });\n            }\n\n            body = _objectSpread(_objectSpread({\n              telefone: obj.telefone,\n              celular: newData.celular,\n              email: newData.email,\n              pessoa_tipo_id: obj.pessoa_tipo_id,\n              pessoa_cadastro_id: obj.pessoa_cadastro_id,\n              pessoa_status_id: obj.pessoa_status_id,\n              recebe_via_administrador: obj.recebe_via_administrador,\n              pessoa_fisica: pessoa_fisica,\n              pessoa_juridica: obj.pessoa_juridica,\n              endereco: [endereco],\n              carros: obj.carros,\n              pessoa_arquivos: obj.pessoa_arquivos,\n              conta_bancaria: obj.conta_bancaria\n            }, pessoa_arquivos.length && {\n              pessoa_arquivos: pessoa_arquivos\n            }), newData.prefilId && {\n              foto_perfil_arquivo_id: newData.prefilId\n            });\n            _context.next = 10;\n            return getSession();\n\n          case 10:\n            session = _context.sent;\n            token = 'Bearer ' + session.access_token;\n            console.log(\"body =\", body);\n            _context.next = 15;\n            return httpRequest.patch(\"\".concat(config.baseUrl, \"/api/proprietario\"), true, token, body);\n\n          case 15:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res && res.data ? res.data : res);\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0); // notify(\"error\", error.response ? error.response.data : '')\n\n            return _context.abrupt(\"return\", null);\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 19]]);\n  }));\n\n  return function updateOwner(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["D:/gav(1)/api/owner/updateOwner.js"],"names":["config","httpRequest","getSession","notify","useInput","updateOwner","newData","obj","pessoa_fisica","cpf","nome","endereco","latitude","longitude","rua","cep","numero","complemento","bairro","cidadeId","pessoa_arquivos","cnhId","push","arquivo_id","pessoa_arquivo_tipo_id","comprovanteId","body","telefone","celular","email","pessoa_tipo_id","pessoa_cadastro_id","pessoa_status_id","recebe_via_administrador","pessoa_juridica","carros","conta_bancaria","length","prefilId","foto_perfil_arquivo_id","session","token","access_token","console","log","patch","baseUrl","res","data"],"mappings":"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","sourcesContent":["import { config } from \"../../config\"\n\nimport httpRequest from \"../../utils/request\"\nimport { getSession } from 'next-auth/client'\nimport { notify, useInput } from \"../../utils/common\"\n\n\nexport const updateOwner = async (newData, obj) => {\n\n    try {\n\n        const pessoa_fisica = { ...obj.pessoa_fisica, cpf: newData.cpf, nome: newData.nome }\n        const endereco = [{\n            \"latitude\": obj.latitude,\n            \"longitude\": obj.longitude,\n            \"logradouro\": newData.rua,\n            \"cep\": newData.cep,\n            \"numero\": newData.numero,\n            \"complemento\": newData.complemento,\n            \"bairro\": newData.bairro,\n            \"cidade_id\": newData.cidadeId\n        }]\n        let pessoa_arquivos = []\n\n        if (obj.pessoa_arquivos) {\n            pessoa_arquivos = [...obj.pessoa_arquivos]\n        }\n\n        if (newData.cnhId) {\n            pessoa_arquivos.push({ arquivo_id: newData.cnhId, pessoa_arquivo_tipo_id: 1 })\n        }\n        if (newData.comprovanteId) {\n            pessoa_arquivos.push({ arquivo_id: newData.comprovanteId, pessoa_arquivo_tipo_id: 2 })\n        }\n        const body = {\n            telefone: obj.telefone,\n            celular: newData.celular,\n            email: newData.email,\n            pessoa_tipo_id: obj.pessoa_tipo_id,\n            pessoa_cadastro_id: obj.pessoa_cadastro_id,\n            pessoa_status_id: obj.pessoa_status_id,\n            recebe_via_administrador: obj.recebe_via_administrador,\n            pessoa_fisica: pessoa_fisica,\n            pessoa_juridica: obj.pessoa_juridica,\n            endereco: [endereco],\n            carros: obj.carros,\n            pessoa_arquivos: obj.pessoa_arquivos,\n            conta_bancaria: obj.conta_bancaria,\n            ...(pessoa_arquivos.length && {pessoa_arquivos: pessoa_arquivos}),\n            ...(newData.prefilId && { foto_perfil_arquivo_id: newData.prefilId })\n        }\n        const session = await getSession()\n        const token = 'Bearer ' + session.access_token\n\n        console.log(\"body =\", body)\n\n        const res = await httpRequest.patch(\n            `${config.baseUrl}/api/proprietario`,\n            true,\n            token,\n            body)\n\n\n        return res && res.data ? res.data : res\n\n    } catch (error) {\n        console.log(error)\n        // notify(\"error\", error.response ? error.response.data : '')\n        return null\n    }\n}"]},"metadata":{},"sourceType":"module"}