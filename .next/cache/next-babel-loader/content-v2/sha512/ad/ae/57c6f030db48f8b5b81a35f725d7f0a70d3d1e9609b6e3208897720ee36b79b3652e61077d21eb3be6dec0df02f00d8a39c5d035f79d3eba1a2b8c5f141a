{"ast":null,"code":"import _defineProperty from \"D:/gav(1)/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"D:/gav(1)/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/gav(1)/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { getSession } from \"next-auth/client\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\n\nvar withAuth = function withAuth(WrappedComponent) {\n  return function (props) {\n    var Router = useRouter();\n\n    var _useState = useState(false),\n        verified = _useState[0],\n        setVerified = _useState[1];\n\n    useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var session;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getSession();\n\n            case 2:\n              session = _context.sent;\n\n              if (session) {\n                setVerified(true);\n              } else {\n                Router.replace(\"/login\");\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })), []);\n\n    if (verified) {\n      return /*#__PURE__*/_jsx(WrappedComponent, _objectSpread({}, props));\n    } else {\n      return null;\n    }\n  };\n};\n\nexport default withAuth;","map":null,"metadata":{},"sourceType":"module"}