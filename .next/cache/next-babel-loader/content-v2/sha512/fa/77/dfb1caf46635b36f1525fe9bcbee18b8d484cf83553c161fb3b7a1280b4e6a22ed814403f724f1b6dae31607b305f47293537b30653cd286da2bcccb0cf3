{"ast":null,"code":"import _regeneratorRuntime from \"D:/gav(1)/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/gav(1)/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { config } from \"../config\";\nimport { REGISTER_FAIL, REGISTER_REQUEST, REGISTER_SUCCESS } from \"../constants/authConstant\";\nimport httpRequest from \"../utils/request\";\nimport { getSession } from 'next-auth/client';\nimport axios from 'axios';\nexport var registerService = function registerService(regObj, callback) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var body, _yield$httpRequest$po, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: REGISTER_REQUEST\n              });\n              _context.prev = 1;\n              body = {\n                username: regObj.username,\n                password: regObj.password\n              };\n              _context.next = 5;\n              return httpRequest.post(\"\".concat(config.baseUrl, \"/register\"), false, null, body);\n\n            case 5:\n              _yield$httpRequest$po = _context.sent;\n              data = _yield$httpRequest$po.data;\n              dispatch({\n                type: REGISTER_SUCCESS,\n                payload: data\n              });\n              callback(data, null);\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch({\n                type: REGISTER_FAIL,\n                payload: _context.t0.response\n              });\n              callback(null, _context.t0.response);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var loginService = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(service, token) {\n    var body, _yield$httpRequest$po2, data;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            body = {\n              accessToken: token,\n              client_secret: config.GAV_CLIENT_SECRET,\n              client_id: config.GAV_CLIENT_ID //pessoa_cadastro_id:  2,\n\n            };\n            _context2.next = 4;\n            return httpRequest.post(\"\".concat(config.baseUrl, \"/api/auth/social/\").concat(service), false, null, body);\n\n          case 4:\n            _yield$httpRequest$po2 = _context2.sent;\n            data = _yield$httpRequest$po2.data;\n            return _context2.abrupt(\"return\", data);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"error = ---\");\n            console.log(_context2.t0.response.data.message);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 9]]);\n  }));\n\n  return function loginService(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getMe = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var session, token, _yield$axios$get, me;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return getSession();\n\n          case 3:\n            session = _context3.sent;\n\n            if (!session) {\n              _context3.next = 11;\n              break;\n            }\n\n            token = session.access_token;\n            _context3.next = 8;\n            return axios.get(\"\".concat(config.baseUrl, \"/api/me\"), {\n              headers: {\n                Authorization: \"Bearer \".concat(token),\n                Accept: 'application/json'\n              }\n            });\n\n          case 8:\n            _yield$axios$get = _context3.sent;\n            me = _yield$axios$get.data;\n            return _context3.abrupt(\"return\", me);\n\n          case 11:\n            _context3.next = 17;\n            break;\n\n          case 13:\n            _context3.prev = 13;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n            return _context3.abrupt(\"return\", null);\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 13]]);\n  }));\n\n  return function getMe() {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["D:/gav(1)/api/auth.js"],"names":["config","REGISTER_FAIL","REGISTER_REQUEST","REGISTER_SUCCESS","httpRequest","getSession","axios","registerService","regObj","callback","dispatch","type","body","username","password","post","baseUrl","data","payload","response","loginService","service","token","accessToken","client_secret","GAV_CLIENT_SECRET","client_id","GAV_CLIENT_ID","console","log","message","getMe","session","access_token","get","headers","Authorization","Accept","me"],"mappings":"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","sourcesContent":["import { config } from \"../config\"\nimport { REGISTER_FAIL, REGISTER_REQUEST, REGISTER_SUCCESS } from \"../constants/authConstant\"\nimport httpRequest from \"../utils/request\"\nimport { getSession } from 'next-auth/client'\nimport axios from 'axios'\n\n\nexport const registerService = (regObj, callback) => async (dispatch) => {\n  dispatch({ type: REGISTER_REQUEST })\n\n  try {\n    const body = {\n      username: regObj.username,\n      password: regObj.password,\n    }\n\n    const { data } = await httpRequest.post(\n      `${config.baseUrl}/register`,\n      false,\n      null,\n      body\n    )\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    callback(data, null)\n  } catch (error) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: error.response,\n    })\n\n    callback(null, error.response)\n  }\n}\n\nexport const loginService = async (service, token) => {\n  //console.log(\"login service\", service, token)\n  try {\n\n    const body = {\n      accessToken: token,\n      client_secret: config.GAV_CLIENT_SECRET,\n      client_id: config.GAV_CLIENT_ID,\n      //pessoa_cadastro_id:  2,\n\n\n    }\n\n    const { data } = await httpRequest.post(\n      `${config.baseUrl}/api/auth/social/${service}`,\n      false,\n      null,\n      body\n    )\n    return data\n\n  } catch (error) {\n    console.log(\"error = ---\")\n    console.log(error.response.data.message)\n  }\n}\n\nexport const getMe = async () => {\n  try {\n    const session = await getSession()\n    if (session) {\n      const token = session.access_token\n      const { data: me } = await axios.get(\n        `${config.baseUrl}/api/me`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            Accept: 'application/json',\n          },\n        }\n      )\n      return me\n    }\n  } catch (error) {\n    console.log(error)\n    return null\n  }\n}"]},"metadata":{},"sourceType":"module"}