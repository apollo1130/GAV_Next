{"ast":null,"code":"import _regeneratorRuntime from \"D:/gav(1)/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/gav(1)/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { config } from '../config';\nimport { createPerson } from '../api/cadastro/captasao/createPerson';\nvar domain = config.baseUrl;\nexport var gavProvider = {\n  clientId: config.GAV_CLIENT_ID,\n  clientSecret: config.GAV_CLIENT_SECRET,\n  grant_type: config.grantType\n};\nexport var getToken = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(credentials) {\n    var _yield$axios$post, tokens;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            credentials.scope = '';\n            credentials.grant_type = gavProvider.grant_type;\n            credentials.client_id = gavProvider.clientId;\n            credentials.client_secret = gavProvider.clientSecret; //console.log(\"creadiantials  = \", credentials)\n\n            _context.prev = 4;\n            _context.next = 7;\n            return axios.post(\"\".concat(domain, \"/oauth/token\"), credentials);\n\n          case 7:\n            _yield$axios$post = _context.sent;\n            tokens = _yield$axios$post.data;\n            return _context.abrupt(\"return\", tokens);\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](4);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", null);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 12]]);\n  }));\n\n  return function getToken(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getMe = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(access_token) {\n    var _yield$axios$get, me;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return axios.get(\"\".concat(domain, \"/api/me\"), {\n              headers: {\n                Authorization: \"Bearer \".concat(access_token),\n                Accept: 'application/json'\n              }\n            });\n\n          case 3:\n            _yield$axios$get = _context2.sent;\n            me = _yield$axios$get.data;\n            return _context2.abrupt(\"return\", me);\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n            return _context2.abrupt(\"return\", null);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 8]]);\n  }));\n\n  return function getMe(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["D:/gav(1)/utils/providers.js"],"names":["axios","config","createPerson","domain","baseUrl","gavProvider","clientId","GAV_CLIENT_ID","clientSecret","GAV_CLIENT_SECRET","grant_type","grantType","getToken","credentials","scope","client_id","client_secret","post","tokens","data","console","log","getMe","access_token","get","headers","Authorization","Accept","me"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,SAASC,YAAT,QAA6B,uCAA7B;AAEA,IAAMC,MAAM,GAAGF,MAAM,CAACG,OAAtB;AAEA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,QAAQ,EAAEL,MAAM,CAACM,aADM;AAEvBC,EAAAA,YAAY,EAAEP,MAAM,CAACQ,iBAFE;AAGvBC,EAAAA,UAAU,EAAET,MAAM,CAACU;AAHI,CAApB;AAMP,OAAO,IAAMC,QAAQ;AAAA,sEAAG,iBAAOC,WAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACpBA,YAAAA,WAAW,CAACC,KAAZ,GAAoB,EAApB;AACAD,YAAAA,WAAW,CAACH,UAAZ,GAAyBL,WAAW,CAACK,UAArC;AACAG,YAAAA,WAAW,CAACE,SAAZ,GAAwBV,WAAW,CAACC,QAApC;AACAO,YAAAA,WAAW,CAACG,aAAZ,GAA4BX,WAAW,CAACG,YAAxC,CAJoB,CAKpB;;AALoB;AAAA;AAAA,mBAOeR,KAAK,CAACiB,IAAN,WACxBd,MADwB,mBAE3BU,WAF2B,CAPf;;AAAA;AAAA;AAOFK,YAAAA,MAPE,qBAORC,IAPQ;AAAA,6CAYTD,MAZS;;AAAA;AAAA;AAAA;AAcjBE,YAAAA,OAAO,CAACC,GAAR;AAdiB,6CAeT,IAfS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAART,QAAQ;AAAA;AAAA;AAAA,GAAd;AAmBP,OAAO,IAAMU,KAAK;AAAA,uEAAG,kBAAOC,YAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEcvB,KAAK,CAACwB,GAAN,WACpBrB,MADoB,cAEvB;AACIsB,cAAAA,OAAO,EAAE;AACLC,gBAAAA,aAAa,mBAAYH,YAAZ,CADR;AAELI,gBAAAA,MAAM,EAAE;AAFH;AADb,aAFuB,CAFd;;AAAA;AAAA;AAECC,YAAAA,EAFD,oBAELT,IAFK;AAAA,8CAWNS,EAXM;;AAAA;AAAA;AAAA;AAabR,YAAAA,OAAO,CAACC,GAAR;AAba,8CAcN,IAdM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALC,KAAK;AAAA;AAAA;AAAA,GAAX","sourcesContent":["import axios from 'axios'\nimport {config} from '../config'\nimport { createPerson } from '../api/cadastro/captasao/createPerson'\n\nconst domain = config.baseUrl\n\nexport const gavProvider = {\n    clientId: config.GAV_CLIENT_ID,\n    clientSecret: config.GAV_CLIENT_SECRET,\n    grant_type: config.grantType\n}\n\nexport const getToken = async (credentials) => {\n    credentials.scope = ''\n    credentials.grant_type = gavProvider.grant_type\n    credentials.client_id = gavProvider.clientId\n    credentials.client_secret = gavProvider.clientSecret\n    //console.log(\"creadiantials  = \", credentials)\n    try {\n        const { data: tokens } = await axios.post(\n            `${domain}/oauth/token`,\n            credentials\n        )\n       // console.log(tokens)\n        return tokens\n    } catch (error) {\n       console.log(error)\n        return null\n    }\n}\n\nexport const getMe = async (access_token) => {\n    try {\n        const { data: me } = await axios.get(\n            `${domain}/api/me`,\n            {\n                headers: {\n                    Authorization: `Bearer ${access_token}`,\n                    Accept: 'application/json',\n                },\n            }\n        )\n        return me\n    } catch (error) {\n        console.log(error)\n        return null\n    }\n}"]},"metadata":{},"sourceType":"module"}