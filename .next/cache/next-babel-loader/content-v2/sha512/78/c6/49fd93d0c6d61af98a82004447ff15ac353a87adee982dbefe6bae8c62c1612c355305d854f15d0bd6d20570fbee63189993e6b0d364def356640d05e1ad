{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\gav(1)\\\\utils\\\\withAuth.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { getSession } from \"next-auth/client\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\n\nconst withAuth = WrappedComponent => {\n  return props => {\n    const Router = useRouter();\n    const {\n      0: verified,\n      1: setVerified\n    } = useState(false);\n    useEffect(async () => {\n      const session = await getSession();\n\n      if (session) {\n        setVerified(true);\n      } else {\n        Router.replace(\"/login\");\n      }\n    }, []);\n\n    if (verified) {\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, _objectSpread({}, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 20\n      }, this);\n    } else {\n      return null;\n    }\n  };\n};\n\nexport default withAuth;","map":{"version":3,"sources":["D:/gav(1)/utils/withAuth.js"],"names":["getSession","useRouter","useEffect","useState","withAuth","WrappedComponent","props","Router","verified","setVerified","session","replace"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,gBAAD,IAAsB;AACnC,SAAQC,KAAD,IAAW;AACd,UAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,UAAM;AAAA,SAACO,QAAD;AAAA,SAAWC;AAAX,QAA0BN,QAAQ,CAAC,KAAD,CAAxC;AAEAD,IAAAA,SAAS,CAAC,YAAY;AAClB,YAAMQ,OAAO,GAAG,MAAMV,UAAU,EAAhC;;AACA,UAAIU,OAAJ,EAAa;AACTD,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH,OAFD,MAEO;AACHF,QAAAA,MAAM,CAACI,OAAP,CAAe,QAAf;AACH;AACJ,KAPQ,EAON,EAPM,CAAT;;AASA,QAAIH,QAAJ,EAAc;AACV,0BAAO,QAAC,gBAAD,oBAAsBF,KAAtB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO;AACH,aAAO,IAAP;AACH;AACJ,GAlBD;AAmBH,CApBD;;AAqBA,eAAeF,QAAf","sourcesContent":["import { getSession } from \"next-auth/client\"\nimport { useRouter } from \"next/router\"\nimport { useEffect, useState } from \"react\"\n\nconst withAuth = (WrappedComponent) => {\n    return (props) => {\n        const Router = useRouter()\n        const [verified, setVerified] = useState(false)\n\n        useEffect(async () => {\n            const session = await getSession()\n            if (session) {\n                setVerified(true)\n            } else {\n                Router.replace(\"/login\")\n            }\n        }, [])\n\n        if (verified) {\n            return <WrappedComponent {...props} />\n        } else {\n            return null\n        }\n    }\n}\nexport default withAuth\n"]},"metadata":{},"sourceType":"module"}