{"ast":null,"code":"import { OWNER_RECOVER_OWNER_REQUEST, OWNER_RECOVER_OWNER_FAIL, OWNER_RECOVER_OWNER_SUCCESS } from \"../../constants/owner\";\nimport { config } from \"../../config\";\nimport { notify, useInput } from \"../../utils/common\";\nimport httpRequest from \"../../utils/request\";\nimport { getSession } from 'next-auth/client';\nexport const recoverOwner = async (queryParamsObj, callback) => {\n  try {\n    const session = await getSession(); //console.log(session)\n\n    const token = 'Bearer ' + session.access_token;\n    const {\n      data\n    } = await httpRequest.get(`${config.baseUrl}/api/proprietario`, true, token);\n    callback();\n    return data;\n  } catch (error) {\n    callback(); // notify(\"error\",  error.response && error.response.data.message)\n\n    return null;\n  }\n};","map":{"version":3,"sources":["D:/gav(1)/api/owner/recoverOwner.js"],"names":["OWNER_RECOVER_OWNER_REQUEST","OWNER_RECOVER_OWNER_FAIL","OWNER_RECOVER_OWNER_SUCCESS","config","notify","useInput","httpRequest","getSession","recoverOwner","queryParamsObj","callback","session","token","access_token","data","get","baseUrl","error"],"mappings":"AAAA,SACIA,2BADJ,EAEIC,wBAFJ,EAGIC,2BAHJ,QAIO,uBAJP;AAKA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,oBAAjC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,MAAMC,YAAY,GAAG,OAAOC,cAAP,EAAuBC,QAAvB,KAAoC;AAG5D,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMJ,UAAU,EAAhC,CADA,CAEA;;AACA,UAAMK,KAAK,GAAG,YAAYD,OAAO,CAACE,YAAlC;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,WAAW,CAACS,GAAZ,CAClB,GAAEZ,MAAM,CAACa,OAAQ,mBADC,EAEnB,IAFmB,EAGnBJ,KAHmB,CAAvB;AAIAF,IAAAA,QAAQ;AACR,WAAOI,IAAP;AAEH,GAXD,CAWE,OAAOG,KAAP,EAAc;AACZP,IAAAA,QAAQ,GADI,CAEZ;;AACA,WAAO,IAAP;AACH;AACJ,CAnBM","sourcesContent":["import {\n    OWNER_RECOVER_OWNER_REQUEST,\n    OWNER_RECOVER_OWNER_FAIL,\n    OWNER_RECOVER_OWNER_SUCCESS\n} from \"../../constants/owner\"\nimport { config } from \"../../config\"\nimport { notify, useInput } from \"../../utils/common\"\nimport httpRequest from \"../../utils/request\"\nimport { getSession } from 'next-auth/client'\n\nexport const recoverOwner = async (queryParamsObj, callback) => {\n\n\n    try {\n        const session = await getSession()\n        //console.log(session)\n        const token = 'Bearer ' + session.access_token\n        const { data } = await httpRequest.get(\n            `${config.baseUrl}/api/proprietario`,\n            true,\n            token)\n        callback()\n        return data\n\n    } catch (error) {\n        callback()\n        // notify(\"error\",  error.response && error.response.data.message)\n        return null\n    }\n}"]},"metadata":{},"sourceType":"module"}