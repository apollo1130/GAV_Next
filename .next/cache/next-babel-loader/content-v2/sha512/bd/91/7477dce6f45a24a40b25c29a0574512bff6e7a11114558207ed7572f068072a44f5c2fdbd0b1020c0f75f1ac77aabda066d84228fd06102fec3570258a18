{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport moment from 'moment'; // convert object to FormData\n\nexport var notify = function notify(type, message) {\n  if (type === 'success') {\n    toast.success(message, {\n      style: {\n        fontSize: 16\n      }\n    });\n  } else if (type === 'error') {\n    // if (!message) message = 'Something Went Wrong. Try Again!'\n    toast.error(message, {\n      style: {\n        fontSize: 16\n      }\n    });\n  } else if (type === 'warning') {\n    toast.warning(message);\n  } else {\n    toast(message);\n  }\n}; // custom helper to take input field\n\nexport var useInput = function useInput() {\n  _s();\n\n  var initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var _useState = useState(initialValue),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var handleChange = function handleChange(e) {\n    return setValue(e.target.value);\n  };\n\n  return [value, handleChange, setValue];\n};\n\n_s(useInput, \"L08zUdRTae9t+nWvf9xbU6NcRrM=\");\n\nexport var ratingDate = function ratingDate(date) {\n  return moment.utc(date).local().format('DD/MMM/YYYY');\n};","map":{"version":3,"sources":["D:/gav(1)/utils/common.js"],"names":["useState","toast","moment","notify","type","message","success","style","fontSize","error","warning","useInput","initialValue","value","setValue","handleChange","e","target","ratingDate","date","utc","local","format"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAOC,OAAP,EAAmB;AACvC,MAAID,IAAI,KAAK,SAAb,EAAwB;AACtBH,IAAAA,KAAK,CAACK,OAAN,CAAcD,OAAd,EAAuB;AACrBE,MAAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AADc,KAAvB;AAGD,GAJD,MAIO,IAAIJ,IAAI,KAAK,OAAb,EAAsB;AAC3B;AACAH,IAAAA,KAAK,CAACQ,KAAN,CAAYJ,OAAZ,EAAqB;AACnBE,MAAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AADY,KAArB;AAGD,GALM,MAKA,IAAIJ,IAAI,KAAK,SAAb,EAAwB;AAC7BH,IAAAA,KAAK,CAACS,OAAN,CAAcL,OAAd;AACD,GAFM,MAEA;AACLJ,IAAAA,KAAK,CAACI,OAAD,CAAL;AACD;AACF,CAfM,C,CAiBP;;AACA,OAAO,IAAMM,QAAQ,GAAG,SAAXA,QAAW,GAAuB;AAAA;;AAAA,MAAtBC,YAAsB,uEAAP,EAAO;;AAAA,kBACnBZ,QAAQ,CAACY,YAAD,CADW;AAAA,MACtCC,KADsC;AAAA,MAC/BC,QAD+B;;AAE7C,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD;AAAA,WAAOF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAf;AAAA,GAArB;;AACA,SAAO,CAACA,KAAD,EAAQE,YAAR,EAAsBD,QAAtB,CAAP;AACD,CAJM;;GAAMH,Q;;AAMb,OAAO,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAClC,SAAQjB,MAAM,CAACkB,GAAP,CAAWD,IAAX,EAAkBE,KAAlB,GAA0BC,MAA1B,CAAiC,aAAjC,CAAR;AACD,CAFM","sourcesContent":["import { useState } from 'react'\nimport { toast } from 'react-toastify'\nimport moment from 'moment'\n\n// convert object to FormData\nexport const notify = (type, message) => {\n  if (type === 'success') {\n    toast.success(message, {\n      style: { fontSize: 16 },\n    })\n  } else if (type === 'error') {\n    // if (!message) message = 'Something Went Wrong. Try Again!'\n    toast.error(message, {\n      style: { fontSize: 16 },\n    })\n  } else if (type === 'warning') {\n    toast.warning(message)\n  } else {\n    toast(message)\n  }\n}\n\n// custom helper to take input field\nexport const useInput = (initialValue = '') => {\n  const [value, setValue] = useState(initialValue)\n  const handleChange = (e) => setValue(e.target.value)\n  return [value, handleChange, setValue]\n}\n\nexport const ratingDate = (date) => {\n  return  moment.utc(date ).local().format('DD/MMM/YYYY');\n}"]},"metadata":{},"sourceType":"module"}