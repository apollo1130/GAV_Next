{"ast":null,"code":"import _regeneratorRuntime from \"D:/gav(1)/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/gav(1)/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { OWNER_RECOVER_OWNER_REQUEST, OWNER_RECOVER_OWNER_FAIL, OWNER_RECOVER_OWNER_SUCCESS } from \"../../constants/owner\";\nimport { config } from \"../../config\";\nimport { notify, useInput } from \"../../utils/common\";\nimport httpRequest from \"../../utils/request\";\nimport { getSession } from 'next-auth/client';\nexport var recoverOwner = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(queryParamsObj, callback) {\n    var session, token, _yield$httpRequest$ge, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return getSession();\n\n          case 3:\n            session = _context.sent;\n            //console.log(session)\n            token = 'Bearer ' + session.access_token;\n            _context.next = 7;\n            return httpRequest.get(\"\".concat(config.baseUrl, \"/api/proprietario\"), true, token);\n\n          case 7:\n            _yield$httpRequest$ge = _context.sent;\n            data = _yield$httpRequest$ge.data;\n            callback();\n            return _context.abrupt(\"return\", data);\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            callback(); // notify(\"error\",  error.response && error.response.data.message)\n\n            return _context.abrupt(\"return\", null);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 13]]);\n  }));\n\n  return function recoverOwner(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["D:/gav(1)/api/owner/recoverOwner.js"],"names":["OWNER_RECOVER_OWNER_REQUEST","OWNER_RECOVER_OWNER_FAIL","OWNER_RECOVER_OWNER_SUCCESS","config","notify","useInput","httpRequest","getSession","recoverOwner","queryParamsObj","callback","session","token","access_token","get","baseUrl","data"],"mappings":";;AAAA,SACIA,2BADJ,EAEIC,wBAFJ,EAGIC,2BAHJ,QAIO,uBAJP;AAKA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,oBAAjC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,IAAMC,YAAY;AAAA,sEAAG,iBAAOC,cAAP,EAAuBC,QAAvB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIEH,UAAU,EAJZ;;AAAA;AAIdI,YAAAA,OAJc;AAKpB;AACMC,YAAAA,KANc,GAMN,YAAYD,OAAO,CAACE,YANd;AAAA;AAAA,mBAOGP,WAAW,CAACQ,GAAZ,WAChBX,MAAM,CAACY,OADS,wBAEnB,IAFmB,EAGnBH,KAHmB,CAPH;;AAAA;AAAA;AAOZI,YAAAA,IAPY,yBAOZA,IAPY;AAWpBN,YAAAA,QAAQ;AAXY,6CAYbM,IAZa;;AAAA;AAAA;AAAA;AAepBN,YAAAA,QAAQ,GAfY,CAgBpB;;AAhBoB,6CAiBb,IAjBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZF,YAAY;AAAA;AAAA;AAAA,GAAlB","sourcesContent":["import {\n    OWNER_RECOVER_OWNER_REQUEST,\n    OWNER_RECOVER_OWNER_FAIL,\n    OWNER_RECOVER_OWNER_SUCCESS\n} from \"../../constants/owner\"\nimport { config } from \"../../config\"\nimport { notify, useInput } from \"../../utils/common\"\nimport httpRequest from \"../../utils/request\"\nimport { getSession } from 'next-auth/client'\n\nexport const recoverOwner = async (queryParamsObj, callback) => {\n\n\n    try {\n        const session = await getSession()\n        //console.log(session)\n        const token = 'Bearer ' + session.access_token\n        const { data } = await httpRequest.get(\n            `${config.baseUrl}/api/proprietario`,\n            true,\n            token)\n        callback()\n        return data\n\n    } catch (error) {\n        callback()\n        // notify(\"error\",  error.response && error.response.data.message)\n        return null\n    }\n}"]},"metadata":{},"sourceType":"module"}