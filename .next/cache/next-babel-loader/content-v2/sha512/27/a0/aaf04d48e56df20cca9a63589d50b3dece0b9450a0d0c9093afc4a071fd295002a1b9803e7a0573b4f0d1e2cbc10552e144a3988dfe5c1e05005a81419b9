{"ast":null,"code":"import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport moment from 'moment'; // convert object to FormData\n\nexport const notify = (type, message) => {\n  if (type === 'success') {\n    toast.success(message, {\n      style: {\n        fontSize: 16\n      }\n    });\n  } else if (type === 'error') {\n    // if (!message) message = 'Something Went Wrong. Try Again!'\n    toast.error(message, {\n      style: {\n        fontSize: 16\n      }\n    });\n  } else if (type === 'warning') {\n    toast.warning(message);\n  } else {\n    toast(message);\n  }\n}; // custom helper to take input field\n\nexport const useInput = (initialValue = '') => {\n  const {\n    0: value,\n    1: setValue\n  } = useState(initialValue);\n\n  const handleChange = e => setValue(e.target.value);\n\n  return [value, handleChange, setValue];\n};\nexport const ratingDate = date => {\n  return moment.utc(date).local().format('DD/MMM/YYYY');\n};","map":{"version":3,"sources":["D:/gav(1)/utils/common.js"],"names":["useState","toast","moment","notify","type","message","success","style","fontSize","error","warning","useInput","initialValue","value","setValue","handleChange","e","target","ratingDate","date","utc","local","format"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,OAAO,MAAMC,MAAM,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACvC,MAAID,IAAI,KAAK,SAAb,EAAwB;AACtBH,IAAAA,KAAK,CAACK,OAAN,CAAcD,OAAd,EAAuB;AACrBE,MAAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AADc,KAAvB;AAGD,GAJD,MAIO,IAAIJ,IAAI,KAAK,OAAb,EAAsB;AAC3B;AACAH,IAAAA,KAAK,CAACQ,KAAN,CAAYJ,OAAZ,EAAqB;AACnBE,MAAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AADY,KAArB;AAGD,GALM,MAKA,IAAIJ,IAAI,KAAK,SAAb,EAAwB;AAC7BH,IAAAA,KAAK,CAACS,OAAN,CAAcL,OAAd;AACD,GAFM,MAEA;AACLJ,IAAAA,KAAK,CAACI,OAAD,CAAL;AACD;AACF,CAfM,C,CAiBP;;AACA,OAAO,MAAMM,QAAQ,GAAG,CAACC,YAAY,GAAG,EAAhB,KAAuB;AAC7C,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBd,QAAQ,CAACY,YAAD,CAAlC;;AACA,QAAMG,YAAY,GAAIC,CAAD,IAAOF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAApC;;AACA,SAAO,CAACA,KAAD,EAAQE,YAAR,EAAsBD,QAAtB,CAAP;AACD,CAJM;AAMP,OAAO,MAAMI,UAAU,GAAIC,IAAD,IAAU;AAClC,SAAQjB,MAAM,CAACkB,GAAP,CAAWD,IAAX,EAAkBE,KAAlB,GAA0BC,MAA1B,CAAiC,aAAjC,CAAR;AACD,CAFM","sourcesContent":["import { useState } from 'react'\nimport { toast } from 'react-toastify'\nimport moment from 'moment'\n\n// convert object to FormData\nexport const notify = (type, message) => {\n  if (type === 'success') {\n    toast.success(message, {\n      style: { fontSize: 16 },\n    })\n  } else if (type === 'error') {\n    // if (!message) message = 'Something Went Wrong. Try Again!'\n    toast.error(message, {\n      style: { fontSize: 16 },\n    })\n  } else if (type === 'warning') {\n    toast.warning(message)\n  } else {\n    toast(message)\n  }\n}\n\n// custom helper to take input field\nexport const useInput = (initialValue = '') => {\n  const [value, setValue] = useState(initialValue)\n  const handleChange = (e) => setValue(e.target.value)\n  return [value, handleChange, setValue]\n}\n\nexport const ratingDate = (date) => {\n  return  moment.utc(date ).local().format('DD/MMM/YYYY');\n}"]},"metadata":{},"sourceType":"module"}