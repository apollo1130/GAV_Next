{"ast":null,"code":"import _regeneratorRuntime from \"D:/gav(1)/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/gav(1)/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { config } from \"../../config\";\nimport httpRequest from \"../../utils/request\";\nimport serialize from '../../utils/serilizers';\nimport { getSession } from 'next-auth/client';\nexport var ContactPerson = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var session, token, url, _yield$httpRequest$ge, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return getSession();\n\n          case 3:\n            session = _context.sent;\n            token = 'Bearer ' + session.access_token;\n            url = serialize(\"\".concat(config.baseUrl, \"/api/proprietario/contratos\"));\n            _context.next = 8;\n            return httpRequest.get(url, true, token);\n\n          case 8:\n            _yield$httpRequest$ge = _context.sent;\n            data = _yield$httpRequest$ge.data;\n            console.log('data===', data);\n            return _context.abrupt(\"return\", data);\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", null);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 14]]);\n  }));\n\n  return function ContactPerson() {\n    return _ref.apply(this, arguments);\n  };\n}();\n_c = ContactPerson;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactPerson\");","map":{"version":3,"sources":["D:/gav(1)/api/profile/contactPerson.js"],"names":["config","httpRequest","serialize","getSession","ContactPerson","session","token","access_token","url","baseUrl","get","data","console","log"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAIA,OAAO,IAAMC,aAAa;AAAA,sEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGCD,UAAU,EAHX;;AAAA;AAGfE,YAAAA,OAHe;AAIfC,YAAAA,KAJe,GAIP,YAAYD,OAAO,CAACE,YAJb;AAKfC,YAAAA,GALe,GAKTN,SAAS,WAAIF,MAAM,CAACS,OAAX,iCALA;AAAA;AAAA,mBAMER,WAAW,CAACS,GAAZ,CACnBF,GADmB,EAEnB,IAFmB,EAGnBF,KAHmB,CANF;;AAAA;AAAA;AAMbK,YAAAA,IANa,yBAMbA,IANa;AAWrBC,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,IAAvB;AAXqB,6CAYdA,IAZc;;AAAA;AAAA;AAAA;AAAA,6CAed,IAfc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbP,aAAa;AAAA;AAAA;AAAA,GAAnB;KAAMA,a","sourcesContent":["import { config } from \"../../config\"\nimport httpRequest from \"../../utils/request\"\nimport serialize from '../../utils/serilizers'\nimport { getSession } from 'next-auth/client'\n\n\n\nexport const ContactPerson = async () => {\n\n    try {\n        const session = await getSession()\n        const token = 'Bearer ' + session.access_token\n        const url = serialize(`${config.baseUrl}/api/proprietario/contratos`)\n        const { data } = await httpRequest.get(\n            url,\n            true,\n            token\n        )\n        console.log('data===', data)\n        return data\n\n    } catch (error) {\n        return null\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}