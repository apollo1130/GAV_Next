{"ast":null,"code":"import _defineProperty from \"D:/gav(1)/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/gav(1)/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/gav(1)/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\gav(1)\\\\utils\\\\withAuth.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { getSession } from \"next-auth/client\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\n\nvar withAuth = function withAuth(WrappedComponent) {\n  var _s = $RefreshSig$();\n\n  return _s(function (props) {\n    _s();\n\n    var Router = useRouter();\n\n    var _useState = useState(false),\n        verified = _useState[0],\n        setVerified = _useState[1];\n\n    useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var session;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getSession();\n\n            case 2:\n              session = _context.sent;\n\n              if (session) {\n                setVerified(true);\n              } else {\n                Router.replace(\"/login\");\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })), []);\n\n    if (verified) {\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, _objectSpread({}, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 20\n      }, _this);\n    } else {\n      return null;\n    }\n  }, \"irrnzWYVzfxH8jqgFP57yP7xP7c=\", false, function () {\n    return [useRouter];\n  });\n};\n\nexport default withAuth;","map":{"version":3,"sources":["D:/gav(1)/utils/withAuth.js"],"names":["getSession","useRouter","useEffect","useState","withAuth","WrappedComponent","props","Router","verified","setVerified","session","replace"],"mappings":";;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,gBAAD,EAAsB;AAAA;;AACnC,YAAO,UAACC,KAAD,EAAW;AAAA;;AACd,QAAMC,MAAM,GAAGN,SAAS,EAAxB;;AADc,oBAEkBE,QAAQ,CAAC,KAAD,CAF1B;AAAA,QAEPK,QAFO;AAAA,QAEGC,WAFH;;AAIdP,IAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACgBF,UAAU,EAD1B;;AAAA;AACAU,cAAAA,OADA;;AAEN,kBAAIA,OAAJ,EAAa;AACTD,gBAAAA,WAAW,CAAC,IAAD,CAAX;AACH,eAFD,MAEO;AACHF,gBAAAA,MAAM,CAACI,OAAP,CAAe,QAAf;AACH;;AANK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,IAON,EAPM,CAAT;;AASA,QAAIH,QAAJ,EAAc;AACV,0BAAO,QAAC,gBAAD,oBAAsBF,KAAtB;AAAA;AAAA;AAAA;AAAA,eAAP;AACH,KAFD,MAEO;AACH,aAAO,IAAP;AACH;AACJ,GAlBD;AAAA,YACmBL,SADnB;AAAA;AAmBH,CApBD;;AAqBA,eAAeG,QAAf","sourcesContent":["import { getSession } from \"next-auth/client\"\nimport { useRouter } from \"next/router\"\nimport { useEffect, useState } from \"react\"\n\nconst withAuth = (WrappedComponent) => {\n    return (props) => {\n        const Router = useRouter()\n        const [verified, setVerified] = useState(false)\n\n        useEffect(async () => {\n            const session = await getSession()\n            if (session) {\n                setVerified(true)\n            } else {\n                Router.replace(\"/login\")\n            }\n        }, [])\n\n        if (verified) {\n            return <WrappedComponent {...props} />\n        } else {\n            return null\n        }\n    }\n}\nexport default withAuth\n"]},"metadata":{},"sourceType":"module"}