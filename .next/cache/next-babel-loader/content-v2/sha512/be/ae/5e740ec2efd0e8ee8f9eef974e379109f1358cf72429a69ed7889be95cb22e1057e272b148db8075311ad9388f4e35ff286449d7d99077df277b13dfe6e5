{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { config } from \"../../config\";\nimport httpRequest from \"../../utils/request\";\nimport { getSession } from 'next-auth/client';\nimport { notify, useInput } from \"../../utils/common\";\nimport { RiMastercardFill } from \"react-icons/ri\";\nimport axios from 'axios';\nexport const createFile = async formData => {\n  try {\n    const session = await getSession();\n    const token = 'Bearer ' + session.access_token;\n    let defaultOptions = {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'multipart/form-data',\n        'Accept-Language': 'en'\n      }\n    };\n    Object.assign(defaultOptions.headers, {\n      Authorization: token\n    });\n    const res = await axios.post(`${config.baseUrl}/api/arquivos`, formData, _objectSpread({}, defaultOptions));\n    console.log('res', res.data); //debugger\n\n    return res && res.data ? res.data : res;\n  } catch (error) {\n    console.log(error.response); // notify(\"error\", error.response ? error.response.data : '')\n\n    return null;\n  }\n};","map":{"version":3,"sources":["D:/gav(1)/api/files/createFiles.js"],"names":["config","httpRequest","getSession","notify","useInput","RiMastercardFill","axios","createFile","formData","session","token","access_token","defaultOptions","headers","Object","assign","Authorization","res","post","baseUrl","console","log","data","error","response"],"mappings":";;;;;;AAAA,SAASA,MAAT,QAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,oBAAjC;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAP,IAAoB;AAE1C,MAAI;AAEA,UAAMC,OAAO,GAAG,MAAMP,UAAU,EAAhC;AACA,UAAMQ,KAAK,GAAG,YAAYD,OAAO,CAACE,YAAlC;AAIA,QAAIC,cAAc,GAAG;AACjBC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB,qBAFX;AAGL,2BAAmB;AAHd;AADQ,KAArB;AASAC,IAAAA,MAAM,CAACC,MAAP,CAAcH,cAAc,CAACC,OAA7B,EAAsC;AAClCG,MAAAA,aAAa,EAAEN;AADmB,KAAtC;AAKA,UAAMO,GAAG,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAY,GAAElB,MAAM,CAACmB,OAAQ,eAA7B,EAA6CX,QAA7C,oBAA4DI,cAA5D,EAAlB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,GAAG,CAACK,IAAvB,EAtBA,CAwBA;;AACA,WAAOL,GAAG,IAAIA,GAAG,CAACK,IAAX,GAAkBL,GAAG,CAACK,IAAtB,GAA6BL,GAApC;AAEH,GA3BD,CA2BE,OAAOM,KAAP,EAAc;AACZH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,QAAlB,EADY,CAEZ;;AACA,WAAO,IAAP;AACH;AACJ,CAlCM","sourcesContent":["import { config } from \"../../config\"\nimport httpRequest from \"../../utils/request\"\nimport { getSession } from 'next-auth/client'\nimport { notify, useInput } from \"../../utils/common\"\nimport { RiMastercardFill } from \"react-icons/ri\"\nimport axios from 'axios'\n\n\nexport const createFile = async (formData) => {\n\n    try {\n\n        const session = await getSession()\n        const token = 'Bearer ' + session.access_token\n\n        \n\n        let defaultOptions = {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'multipart/form-data',\n                'Accept-Language': 'en',\n            },\n        }\n\n\n        Object.assign(defaultOptions.headers, {\n            Authorization: token,\n        })\n\n\n        const res = await axios.post(`${config.baseUrl}/api/arquivos`, formData, { ...defaultOptions })\n        console.log('res', res.data);\n        \n        //debugger\n        return res && res.data ? res.data : res\n\n    } catch (error) {\n        console.log(error.response)\n        // notify(\"error\", error.response ? error.response.data : '')\n        return null\n    }\n}"]},"metadata":{},"sourceType":"module"}