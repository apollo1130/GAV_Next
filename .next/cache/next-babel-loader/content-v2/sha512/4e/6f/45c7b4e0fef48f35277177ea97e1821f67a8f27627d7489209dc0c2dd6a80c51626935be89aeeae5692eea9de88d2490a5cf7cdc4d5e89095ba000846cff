{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nexport const AuthInput = ({\n  label,\n  type,\n  name,\n  value,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"auth-input-container\",\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      autoComplete: \"off\",\n      name: name,\n      type: type,\n      required: true,\n      value: value,\n      onChange: event => onChange(event)\n    }), /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: \"text\",\n      className: \"auth-input-label-container\",\n      children: /*#__PURE__*/_jsx(\"span\", {\n        className: \"auth-input-label-name\",\n        children: label\n      })\n    })]\n  });\n};\nAuthInput.defaultProps = {\n  type: 'text'\n};\nexport const WizardInput = (_ref) => {\n  let {\n    label,\n    type,\n    value,\n    name,\n    handleOwner\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"label\", \"type\", \"value\", \"name\", \"handleOwner\"]);\n\n  //console.log(\"props = \", label, type,value, handleOwner )\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"reg-form-input d-xl-flex justify-content-between\",\n    children: [/*#__PURE__*/_jsx(\"label\", {\n      className: \"d-lg-inline-block d-block\",\n      children: label\n    }), /*#__PURE__*/_jsx(\"input\", _objectSpread({\n      type: type,\n      value: value,\n      name: name,\n      onChange: e => handleOwner(e)\n    }, rest))]\n  });\n};\nWizardInput.defaultProps = {\n  type: 'text'\n};","map":null,"metadata":{},"sourceType":"module"}