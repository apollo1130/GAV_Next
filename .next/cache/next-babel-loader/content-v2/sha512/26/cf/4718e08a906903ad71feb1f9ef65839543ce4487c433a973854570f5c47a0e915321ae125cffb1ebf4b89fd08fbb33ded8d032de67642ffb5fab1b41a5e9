{"ast":null,"code":"import _regeneratorRuntime from \"D:/gav(1)/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/gav(1)/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { config } from \"../../config\";\nimport { ADS_LIST__REQUEST, ADS_LIST__SUCCESS, ADS_LIST__FAIL, SINGLE_ADD__REQUEST, SINGLE_ADD__SUCCESS, SINGLE_ADD__FAIL } from \"../../constants/adsConstant\";\nimport httpRequest from \"../../utils/request\";\nimport serialize from '../../utils/serilizers';\nimport { getSession } from 'next-auth/client';\nexport var listAds = function listAds(queryParamsObj, callback) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var session, token, url, _yield$httpRequest$ge, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: ADS_LIST__REQUEST\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return getSession();\n\n            case 4:\n              session = _context.sent;\n              token = 'Basic ' + config.basicAuthToken;\n              url = serialize(\"\".concat(config.baseUrl, \"/api/anuncios?\"), queryParamsObj);\n              _context.next = 9;\n              return httpRequest.get(url, true, token);\n\n            case 9:\n              _yield$httpRequest$ge = _context.sent;\n              data = _yield$httpRequest$ge.data;\n              console.log(\"data = \", data);\n              console.log(\"session\", session);\n              dispatch({\n                type: ADS_LIST__SUCCESS,\n                payload: data\n              });\n              callback(data, null);\n              _context.next = 22;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](1);\n              console.log('error', _context.t0);\n              dispatch({\n                type: ADS_LIST__FAIL,\n                payload: _context.t0.response\n              });\n              callback(null, _context.t0.response);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 17]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var SingleAdd = function SingleAdd(id, callback) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var session, token, url, _yield$httpRequest$ge2, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: SINGLE_ADD__REQUEST\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return getSession();\n\n            case 4:\n              session = _context2.sent;\n              token = 'Basic ' + config.basicAuthToken;\n              url = serialize(\"\".concat(config.baseUrl, \"/api/anuncios/\").concat(id));\n              _context2.next = 9;\n              return httpRequest.get(url, true, token);\n\n            case 9:\n              _yield$httpRequest$ge2 = _context2.sent;\n              data = _yield$httpRequest$ge2.data;\n              console.log(\"data = \", data);\n              console.log(\"session\", session);\n              dispatch({\n                type: SINGLE_ADD__SUCCESS,\n                payload: data\n              });\n              callback(data, null);\n              _context2.next = 22;\n              break;\n\n            case 17:\n              _context2.prev = 17;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log('error', _context2.t0);\n              dispatch({\n                type: SINGLE_ADD__FAIL,\n                payload: _context2.t0.response\n              });\n              callback(null, _context2.t0.response);\n\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 17]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":null,"metadata":{},"sourceType":"module"}