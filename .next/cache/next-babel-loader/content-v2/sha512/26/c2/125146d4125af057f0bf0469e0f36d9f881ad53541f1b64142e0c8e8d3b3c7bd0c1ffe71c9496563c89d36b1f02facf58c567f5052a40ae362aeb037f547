{"ast":null,"code":"import _regeneratorRuntime from \"D:/gav(1)/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/gav(1)/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { config } from \"../../../config\";\nimport { OWNER_LIST_OF_CARS_REQUEST, OWNER_LIST_OF_CARS_SUCCESS, OWNER_LIST_OF_CARS_FAIL } from \"../../../constants/owner\";\nimport { CARS_DETAILS_REQUEST, CARS_DETAILS_SUCCESS, CARS_DETAILS_FAIL } from \"../../../constants/carsConstant\";\nimport httpRequest from \"../../../utils/request\";\nimport serialize from '../../../utils/serilizers';\nimport { getSession } from 'next-auth/client';\nimport { notify, useInput } from \"../../../utils/common\";\nexport var ownerListOfCars = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(queryParamsObj, callback) {\n    var session, token, url, _yield$httpRequest$ge, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return getSession();\n\n          case 3:\n            session = _context.sent;\n            token = 'Bearer ' + session.access_token;\n            url = serialize(\"\".concat(config.baseUrl, \"/api/proprietario/carros?\"), queryParamsObj);\n            _context.next = 8;\n            return httpRequest.get(url, true, token);\n\n          case 8:\n            _yield$httpRequest$ge = _context.sent;\n            data = _yield$httpRequest$ge.data;\n            callback();\n            console.log('session', session);\n            return _context.abrupt(\"return\", data);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](0);\n            callback();\n            notify(\"error\", _context.t0.response && _context.t0.response.data.message || \"\");\n            return _context.abrupt(\"return\", null);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 15]]);\n  }));\n\n  return function ownerListOfCars(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var carDetails = function carDetails(callback) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var session, token, url, _yield$httpRequest$ge2, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: CARS_DETAILS_REQUEST\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return getSession();\n\n            case 4:\n              session = _context2.sent;\n              token = 'Bearer ' + session.access_token;\n              url = serialize(\"\".concat(config.baseUrl, \"/api/docs#operation/alugueisList\"));\n              _context2.next = 9;\n              return httpRequest.get(url, true, token);\n\n            case 9:\n              _yield$httpRequest$ge2 = _context2.sent;\n              data = _yield$httpRequest$ge2.data;\n              console.log(\"data = \", data);\n              dispatch({\n                type: CARS_DETAILS_SUCCESS,\n                payload: data\n              });\n              callback(data, null);\n              _context2.next = 20;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch({\n                type: CARS_DETAILS_FAIL,\n                payload: _context2.t0.response\n              });\n              callback(null, _context2.t0.response);\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 16]]);\n    }));\n\n    return function (_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["D:/gav(1)/api/owner/cars/listOfCars.js"],"names":["config","OWNER_LIST_OF_CARS_REQUEST","OWNER_LIST_OF_CARS_SUCCESS","OWNER_LIST_OF_CARS_FAIL","CARS_DETAILS_REQUEST","CARS_DETAILS_SUCCESS","CARS_DETAILS_FAIL","httpRequest","serialize","getSession","notify","useInput","ownerListOfCars","queryParamsObj","callback","session","token","access_token","url","baseUrl","get","data","console","log","response","message","carDetails","dispatch","type","payload"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,iBAAvB;AACA,SACIC,0BADJ,EAEIC,0BAFJ,EAGIC,uBAHJ,QAKO,0BALP;AAMA,SACIC,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,QAKO,iCALP;AAMA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,uBAAjC;AAIA,OAAO,IAAMC,eAAe;AAAA,sEAAG,iBAAOC,cAAP,EAAuBC,QAAvB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGDL,UAAU,EAHT;;AAAA;AAGjBM,YAAAA,OAHiB;AAIjBC,YAAAA,KAJiB,GAIT,YAAYD,OAAO,CAACE,YAJX;AAKjBC,YAAAA,GALiB,GAKXV,SAAS,WAAIR,MAAM,CAACmB,OAAX,gCAA+CN,cAA/C,CALE;AAAA;AAAA,mBAMAN,WAAW,CAACa,GAAZ,CACnBF,GADmB,EAEnB,IAFmB,EAGnBF,KAHmB,CANA;;AAAA;AAAA;AAMfK,YAAAA,IANe,yBAMfA,IANe;AAWvBP,YAAAA,QAAQ;AACRQ,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,OAAvB;AAZuB,6CAahBM,IAbgB;;AAAA;AAAA;AAAA;AAgBvBP,YAAAA,QAAQ;AACRJ,YAAAA,MAAM,CAAC,OAAD,EAAW,YAAMc,QAAN,IAAkB,YAAMA,QAAN,CAAeH,IAAf,CAAoBI,OAAvC,IAAmD,EAA7D,CAAN;AAjBuB,6CAkBhB,IAlBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfb,eAAe;AAAA;AAAA;AAAA,GAArB;AAsBP,OAAO,IAAMc,UAAU,GAAG,SAAbA,UAAa,CAACZ,QAAD;AAAA;AAAA,yEAAc,kBAAOa,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACpCA,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAExB;AAAR,eAAD,CAAR;AADoC;AAAA;AAAA,qBAIVK,UAAU,EAJA;;AAAA;AAI1BM,cAAAA,OAJ0B;AAK1BC,cAAAA,KAL0B,GAKlB,YAAYD,OAAO,CAACE,YALF;AAM1BC,cAAAA,GAN0B,GAMpBV,SAAS,WAAIR,MAAM,CAACmB,OAAX,sCANW;AAAA;AAAA,qBAOTZ,WAAW,CAACa,GAAZ,CACnBF,GADmB,EAEnB,IAFmB,EAGnBF,KAHmB,CAPS;;AAAA;AAAA;AAOxBK,cAAAA,IAPwB,0BAOxBA,IAPwB;AAYhCC,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,IAAvB;AAEAM,cAAAA,QAAQ,CAAC;AACLC,gBAAAA,IAAI,EAAEvB,oBADD;AAELwB,gBAAAA,OAAO,EAAER;AAFJ,eAAD,CAAR;AAKAP,cAAAA,QAAQ,CAACO,IAAD,EAAO,IAAP,CAAR;AAnBgC;AAAA;;AAAA;AAAA;AAAA;AAqBhCM,cAAAA,QAAQ,CAAC;AACLC,gBAAAA,IAAI,EAAEtB,iBADD;AAELuB,gBAAAA,OAAO,EAAE,aAAML;AAFV,eAAD,CAAR;AAKAV,cAAAA,QAAQ,CAAC,IAAD,EAAO,aAAMU,QAAb,CAAR;;AA1BgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAd;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["import { config } from \"../../../config\"\nimport {\n    OWNER_LIST_OF_CARS_REQUEST,\n    OWNER_LIST_OF_CARS_SUCCESS,\n    OWNER_LIST_OF_CARS_FAIL\n\n} from \"../../../constants/owner\"\nimport {\n    CARS_DETAILS_REQUEST,\n    CARS_DETAILS_SUCCESS,\n    CARS_DETAILS_FAIL\n\n} from \"../../../constants/carsConstant\"\nimport httpRequest from \"../../../utils/request\"\nimport serialize from '../../../utils/serilizers'\nimport { getSession } from 'next-auth/client'\nimport { notify, useInput } from \"../../../utils/common\"\n\n\n\nexport const ownerListOfCars = async (queryParamsObj, callback) => {\n\n    try {\n        const session = await getSession()\n        const token = 'Bearer ' + session.access_token\n        const url = serialize(`${config.baseUrl}/api/proprietario/carros?`, queryParamsObj)\n        const { data } = await httpRequest.get(\n            url,\n            true,\n            token\n        )\n        callback()\n        console.log('session', session);\n        return data\n\n    } catch (error) {\n        callback()\n        notify(\"error\", (error.response && error.response.data.message) || \"\")\n        return null\n    }\n}\n\nexport const carDetails = (callback) => async (dispatch) => {\n    dispatch({ type: CARS_DETAILS_REQUEST })\n\n    try {\n        const session = await getSession()\n        const token = 'Bearer ' + session.access_token\n        const url = serialize(`${config.baseUrl}/api/docs#operation/alugueisList`)\n        const { data } = await httpRequest.get(\n            url,\n            true,\n            token\n        )\n        console.log(\"data = \", data)\n\n        dispatch({\n            type: CARS_DETAILS_SUCCESS,\n            payload: data,\n        })\n\n        callback(data, null)\n    } catch (error) {\n        dispatch({\n            type: CARS_DETAILS_FAIL,\n            payload: error.response,\n        })\n\n        callback(null, error.response)\n    }\n}"]},"metadata":{},"sourceType":"module"}