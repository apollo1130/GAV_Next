{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\gav(1)\\\\components\\\\UI\\\\TextInput\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport PropTypes from 'prop-types';\nexport const AuthInput = ({\n  label,\n  type,\n  name,\n  value,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      autoComplete: \"off\",\n      name: name,\n      type: type,\n      required: true,\n      value: value,\n      onChange: event => onChange(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"text\",\n      className: \"auth-input-label-container\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"auth-input-label-name\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\nAuthInput.propTypes = {\n  label: PropTypes.string.isRequired\n};\nAuthInput.defaultProps = {\n  type: 'text'\n};\nexport const WizardInput = (_ref) => {\n  let {\n    label,\n    type,\n    value,\n    name,\n    handleOwner\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"label\", \"type\", \"value\", \"name\", \"handleOwner\"]);\n\n  //console.log(\"props = \", label, type,value, handleOwner )\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reg-form-input d-xl-flex justify-content-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"d-lg-inline-block d-block\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n      type: type,\n      value: value,\n      name: name,\n      onChange: e => handleOwner(e)\n    }, rest), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\nWizardInput.propTypes = {\n  label: PropTypes.string\n};\nWizardInput.defaultProps = {\n  type: 'text'\n};","map":{"version":3,"sources":["D:/gav(1)/components/UI/TextInput/index.js"],"names":["PropTypes","AuthInput","label","type","name","value","onChange","event","propTypes","string","isRequired","defaultProps","WizardInput","handleOwner","rest","e"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA,KAArB;AAA4BC,EAAAA;AAA5B,CAAD,KAA4C;AAEjE,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACI;AAAO,MAAA,YAAY,EAAC,KAApB;AAA0B,MAAA,IAAI,EAAEF,IAAhC;AAAsC,MAAA,IAAI,EAAED,IAA5C;AAAkD,MAAA,QAAQ,MAA1D;AAA2D,MAAA,KAAK,EAAEE,KAAlE;AAAyE,MAAA,QAAQ,EAAGE,KAAD,IAAWD,QAAQ,CAACC,KAAD;AAAtG;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,OAAO,EAAC,MAAf;AAAsB,MAAA,SAAS,EAAC,4BAAhC;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,uBAAhB;AAAA,kBACKL;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAZM;AAePD,SAAS,CAACO,SAAV,GAAsB;AAClBN,EAAAA,KAAK,EAAEF,SAAS,CAACS,MAAV,CAAiBC;AADN,CAAtB;AAIAT,SAAS,CAACU,YAAV,GAAyB;AACrBR,EAAAA,IAAI,EAAE;AADe,CAAzB;AAKA,OAAO,MAAMS,WAAW,GAAG,UAAwD;AAAA,MAAvD;AAAEV,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeE,IAAAA,KAAf;AAAsBD,IAAAA,IAAtB;AAA4BS,IAAAA;AAA5B,GAAuD;AAAA,MAAXC,IAAW;;AAC/E;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,kDAAf;AAAA,4BACI;AAAO,MAAA,SAAS,EAAC,2BAAjB;AAAA,gBAA8CZ;AAA9C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAEC,IAAb;AAAmB,MAAA,KAAK,EAAEE,KAA1B;AAAiC,MAAA,IAAI,EAAED,IAAvC;AAA6C,MAAA,QAAQ,EAAGW,CAAD,IAAKF,WAAW,CAACE,CAAD;AAAvE,OAAgFD,IAAhF;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CARM;AAWPF,WAAW,CAACJ,SAAZ,GAAwB;AACpBN,EAAAA,KAAK,EAAEF,SAAS,CAACS;AADG,CAAxB;AAIAG,WAAW,CAACD,YAAZ,GAA2B;AACvBR,EAAAA,IAAI,EAAE;AADiB,CAA3B","sourcesContent":["import PropTypes from 'prop-types'\n\nexport const AuthInput = ({ label, type, name, value, onChange }) => {\n\n    return (\n        <div className=\"auth-input-container\">\n            <input autoComplete=\"off\" name={name} type={type} required value={value} onChange={(event) => onChange(event)} />\n            <label htmlFor=\"text\" className=\"auth-input-label-container\">\n                <span className=\"auth-input-label-name\">\n                    {label}\n                </span>\n            </label>\n        </div>\n    )\n}\n\n\nAuthInput.propTypes = {\n    label: PropTypes.string.isRequired,\n}\n\nAuthInput.defaultProps = {\n    type: 'text',\n}\n\n\nexport const WizardInput = ({ label, type, value, name, handleOwner, ...rest }) => {\n    //console.log(\"props = \", label, type,value, handleOwner )\n    return (\n        <div className=\"reg-form-input d-xl-flex justify-content-between\">\n            <label className=\"d-lg-inline-block d-block\">{label}</label>\n            <input type={type} value={value} name={name} onChange={(e)=>handleOwner(e)} {...rest} />\n        </div>\n    )\n}\n\n\nWizardInput.propTypes = {\n    label: PropTypes.string,\n}\n\nWizardInput.defaultProps = {\n    type: 'text',\n}"]},"metadata":{},"sourceType":"module"}