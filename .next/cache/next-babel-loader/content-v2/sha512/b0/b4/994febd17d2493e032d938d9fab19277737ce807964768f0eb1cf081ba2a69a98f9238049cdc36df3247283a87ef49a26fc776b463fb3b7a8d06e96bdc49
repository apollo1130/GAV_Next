{"ast":null,"code":"import { config } from \"../config\";\nimport { REGISTER_FAIL, REGISTER_REQUEST, REGISTER_SUCCESS } from \"../constants/authConstant\";\nimport httpRequest from \"../utils/request\";\nimport { getSession } from \"next-auth/client\";\nimport axios from \"axios\";\nexport const registerService = (regObj, callback) => async dispatch => {\n  dispatch({\n    type: REGISTER_REQUEST\n  });\n\n  try {\n    const body = {\n      username: regObj.username,\n      password: regObj.password\n    };\n    const {\n      data\n    } = await httpRequest.post(`${config.baseUrl}/register`, false, null, body);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: data\n    });\n    callback(data, null);\n  } catch (error) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: error.response\n    });\n    callback(null, error.response);\n  }\n};\nexport const loginService = async (service, token) => {\n  //console.log(\"login service\", service, token)\n  try {\n    console.log(\"token--------\" + token);\n    const body = {\n      accessToken: token,\n      client_secret: config.GAV_CLIENT_SECRET,\n      client_id: config.GAV_CLIENT_ID,\n      pessoa_cadastro_id: 2\n    };\n    const {\n      data\n    } = await httpRequest.post(`${config.baseUrl}/api/auth/social/${service}`, false, null, body);\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log(\"error = ---/api/auth\");\n    console.log(error.response.data.message);\n  }\n};\nexport const getMe = async () => {\n  try {\n    const session = await getSession();\n\n    if (session) {\n      const token = session.access_token;\n      const {\n        data: me\n      } = await axios.get(`${config.baseUrl}/api/me`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: \"application/json\"\n        }\n      });\n      return me;\n    }\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}